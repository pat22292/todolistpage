{"version":3,"sources":["actions/index.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","index.js"],"names":["nextTodoId","VisibilityFilters","connect","input","dispatch","onSubmit","e","text","preventDefault","value","trim","type","id","ref","node","style","height","marginRight","fontSize","Todo","onClick","completed","deleted","deleteTodo","listStyle","hidden","marginLeft","TodoList","todos","toggleTodo","map","todo","key","getVisibleTodos","filter","t","Error","state","visibilityFilter","App","VisibleTodoList","action","combineReducers","store","createStore","rootReducer","render","width","textAlign","paddingTop","document","getElementById"],"mappings":"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","file":"static/js/main.1c85759b.chunk.js","sourcesContent":["let nextTodoId = 0\r\nexport const addTodo = text => ({\r\n  type: 'ADD_TODO',\r\n  id: nextTodoId++,\r\n  text\r\n})\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n  type: 'SET_VISIBILITY_FILTER',\r\n  filter\r\n})\r\n\r\nexport const toggleTodo = id => ({\r\n  type: 'TOGGLE_TODO',\r\n  id\r\n})\r\n\r\nexport const deleteTodo = id => ({\r\n  type: 'DELETE_TODO',\r\n  id\r\n})\r\nexport const VisibilityFilters = {\r\n  SHOW_ALL: 'SHOW_ALL',\r\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTodo } from '../actions'\r\n\r\nconst AddTodo = ({ dispatch }) => {\r\n  let input\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={e => {\r\n        e.preventDefault()\r\n        if (!input.value.trim()) {\r\n          return\r\n        }\r\n        dispatch(addTodo(input.value))\r\n        input.value = ''\r\n      }}>\r\n        <input ref={node => input = node} style={{height: 'auto', marginRight: '20px',  fontSize: '2rem'}}/>\r\n        <button type=\"submit\" style={{height: 'auto', marginRight: '20px',  fontSize: '2rem'}}>\r\n          Add Todo\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect()(AddTodo)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Todo = ({ onClick, completed, deleted, text, deleteTodo }) => (\r\n\r\n  <li\r\n    style={{\r\n      // textDecoration: completed ? 'line-through' : 'none',\r\n      listStyle: \"none\"\r\n    }}\r\n    hidden={deleted}\r\n  >\r\n    <span hidden={!completed}>âœ“</span>\r\n    \r\n    {text}\r\n    <button hidden={completed} type=\"submit\" onClick={onClick} style={{ marginLeft: '10px',  fontSize: '1rem'}}>\r\n         Done\r\n        </button>\r\n        <button hidden={completed} type=\"submit\" onClick={deleteTodo} style={{ marginLeft: '10px',  fontSize: '1rem'}}>\r\n         Delete\r\n        </button>\r\n    {/* <button type=\"submit\" onClick={onClick} style={{ marginLeft: '10px',  fontSize: '1rem'}}>\r\n         Edit\r\n        </button>\r\n        <button type=\"submit\" onClick={onClick} style={{ marginLeft: '10px',  fontSize: '1rem'}}>\r\n         Delete\r\n        </button> */}\r\n  </li>\r\n)\r\n\r\nTodo.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n  deleted:  PropTypes.bool.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  deleteTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = ({ todos, toggleTodo }) => (\r\n  <ul>\r\n    {todos.map(todo =>\r\n      <Todo\r\n        key={todo.id}\r\n        {...todo}\r\n        onClick={() => toggleTodo(todo.id)}\r\n      />\r\n    )}\r\n  </ul>\r\n)\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    deleted: PropTypes.bool.isRequired,\r\n    text: PropTypes.string.isRequired\r\n  }).isRequired).isRequired,\r\n  toggleTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList\r\n","import { connect } from 'react-redux'\r\nimport { toggleTodo } from '../actions'\r\nimport TodoList from '../components/TodoList'\r\nimport { VisibilityFilters } from '../actions'\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n  switch (filter) {\r\n    case VisibilityFilters.SHOW_ALL:\r\n      return todos\r\n    case VisibilityFilters.SHOW_COMPLETED:\r\n      return todos.filter(t => t.completed)\r\n    case VisibilityFilters.SHOW_ACTIVE:\r\n      return todos.filter(t => !t.completed)\r\n    default:\r\n      throw new Error('Unknown filter: ' + filter)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleTodo: id => dispatch(toggleTodo(id))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoList)\r\n","import React from 'react'\r\n// import Footer from './Footer'\r\nimport AddTodo from '../containers/AddTodo'\r\nimport VisibleTodoList from '../containers/VisibleTodoList'\r\n\r\nconst App = () => (\r\n  <div>\r\n    <AddTodo />\r\n    <VisibleTodoList />\r\n    {/* <Footer /> */}\r\n  </div>\r\n)\r\n\r\nexport default App\r\n","const todos = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TODO':\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          text: action.text,\r\n          completed: false,\r\n          deleted: false\r\n        }\r\n      ]\r\n    case 'TOGGLE_TODO':\r\n      return state.map(todo =>\r\n        (todo.id === action.id)\r\n          ? {...todo, completed: !todo.completed}\r\n          : todo\r\n      )\r\n    case 'DELETE_TODO':\r\n        return state.map(todo =>\r\n          (todo.id === action.id)\r\n            ? {...todo, deleted: !todo.deleted}\r\n            : todo\r\n        )\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default todos\r\n","import { VisibilityFilters } from '../actions'\r\n\r\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\r\n  switch (action.type) {\r\n    case 'SET_VISIBILITY_FILTER':\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default visibilityFilter\r\n","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\nimport visibilityFilter from './visibilityFilter'\r\n\r\nexport default combineReducers({\r\n  todos,\r\n  visibilityFilter\r\n})\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport App from './components/App'\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <div style={{width: '100vw', textAlign: \"center\", paddingTop: \"100px\", fontSize: '2rem'}}>\r\n    <App/>\r\n    </div>\r\n   \r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}